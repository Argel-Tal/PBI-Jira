{
  "compatibilityLevel": 1567,
  "model": {
    "annotations": [
      {
        "name": "PBI_QueryOrder",
        "value": "[\"YourOrg issues\",\"FetchPage\",\"FetchPages\",\"GenerateByPage\",\"URL\",\"Status Ranks\",\"Issue Families\",\"Issue Types\",\"Priorities\",\"Environments Lookup\",\"Status Codes\",\"DateDimensionBI\",\"Report last refresh\",\"MeasuresTable\",\"Projects\",\"Fixes\",\"Devs\",\"Linked Issues\",\"Duplicate Check\",\"Uncoded Statuses\",\"JIRA API return\",\"JIRA Lookup tables\"]"
      },
      {
        "name": "__PBI_TimeIntelligenceEnabled",
        "value": "0"
      },
      {
        "name": "PBIDesktopVersion",
        "value": "2.124.2028.0 (23.12)"
      },
      {
        "name": "PBI_ProTooling",
        "value": "[\"DevMode\"]"
      },
      {
        "name": "__TEdtr",
        "value": "1"
      }
    ],
    "culture": "en-US",
    "cultures": [
      {
        "name": "en-US",
        "linguisticMetadata": {
          "content": {
            "DynamicImprovement": "HighConfidence",
            "Language": "en-US",
            "Version": "1.0.0"
          },
          "contentType": "json"
        }
      }
    ],
    "dataAccessOptions": {
      "legacyRedirects": true,
      "returnErrorValuesAsNull": true
    },
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "expressions": [
      {
        "name": "FetchPage",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    FetchPage = (url as text, pageSize as number, skipRows as number) as table =>",
          "    let",
          "        //Here is where you run the code that will return a single page",
          "        contents = Web.Contents(",
          "            URL",
          "            , [RelativePath = \"/rest/api/2/search\"",
          "            , Query = [maxResults= Text.From(pageSize), startAt = Text.From(skipRows)]",
          "            ]",
          "        )",
          "        , json = Json.Document(contents)",
          "        , Value = json[issues]",
          "        , table = Table.FromList(Value, Splitter.SplitByNothing(), null, null, ExtraValues.Error)",
          "    in",
          "        table meta [skipRows = skipRows + pageSize, total = 100]",
          "in",
          "    FetchPage"
        ],
        "kind": "m",
        "lineageTag": "817bf858-ee70-40ab-a8a4-fc185ebf8a0b",
        "queryGroup": "02 API query\\02.1 Functions"
      },
      {
        "name": "FetchPages",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    FetchPages = (url as text, pageSize as number) => ",
          "let ",
          "    Source = GenerateByPage(",
          "    (previous) =>",
          "    let",
          "        skipRows = if previous = null then 0 else Value.Metadata(previous)[skipRows],",
          "        totalItems = if previous = null then 0 else Value.Metadata(previous)[total],",
          "        table = if previous = null or Table.RowCount(previous) = pageSize then ",
          "                    FetchPage(url, pageSize, skipRows) ",
          "\t\telse null",
          "    in table,",
          "    ",
          "    type table [Column1])",
          "in",
          "    Source",
          "in",
          "    FetchPages"
        ],
        "kind": "m",
        "lineageTag": "acf45744-d51a-4764-8d50-4564e22f9b0a",
        "queryGroup": "02 API query\\02.1 Functions"
      },
      {
        "name": "GenerateByPage",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "//Query Name: GenerateByPage",
          "let",
          "    Source = (getNextPage as function, optional tableType as type) as table =>",
          "    let",
          "        listOfPages = List.Generate(",
          "            () => getNextPage(null),",
          "            (lastPage) => lastPage <> null,",
          "            (lastPage) => getNextPage(lastPage)",
          "            ),",
          "        tableOfPages = Table.FromList(listOfPages, Splitter.SplitByNothing(), {\"Column1\"}),",
          "        firstRow = tableOfPages{0}?,",
          "        keys = if tableType = null then Table.ColumnNames(firstRow[Column1])",
          "               else Record.FieldNames(Type.RecordFields(Type.TableRow(tableType))),",
          "        appliedType = if tableType = null then Value.Type(firstRow[Column1]) else tableType",
          "    in",
          "        if tableType = null and firstRow = null then",
          "            Table.FromRows({})",
          "        else",
          "        Value.ReplaceType(Table.ExpandTableColumn(tableOfPages, \"Column1\", keys), appliedType)",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "ef1a849c-4751-4d21-90ae-50b628977075",
        "queryGroup": "02 API query\\02.1 Functions"
      },
      {
        "name": "URL",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "description": "Jira's URL",
        "expression": "\"YOUR_JIRA_DOMAIN\" meta [IsParameterQuery=true, Type=\"Any\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "ed83b390-9817-4fd6-bc11-dfe2487610af",
        "queryGroup": "00 Params"
      },
      {
        "name": "Status Ranks",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "description": "Sort order and a hierarchy added manually, feeds into a merge",
        "expression": [
          "let",
          "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"lVZNc5swEP0rGp9z6HfGRxzS1DNtzWBSHzI5qLCxVcsSlcAe99d3hTCFFEnmAGh230or6b1dnp5mkdAnUFDMbmaxFICf+S2+svTxfvZ8g/4TZRUTWxKVpZJHytHZ2Ra1ZgK0Rtt7fD5HX9c2atMCXqQidEpgh4ghZ5pJMTHq/gdGllyeDyAqxLSJ4OiDOyID3YKC8CRdxVPwKWhZqxymbWOdPUzchomYkNZjlE1cwESEF+jfu67LUirf5Aua77k09n+jtwNEDEfgsjRJkjD6sroUpB+YAT14skhAFNbumre1ax+Ey3wPBVmcyaragTJQa8LRpwH0jooceOOwQzuez/uy63s8KI6SdUoXvdrtvQisFfYVwBR+QV4FUurQG1btCkVPIgTnTATnrChDB4kE5WfNzEVslgm+Pw7ZglpO4cjghOZucPsfxvCYMEESJbfKCnFsuqT+yZneeQ5YHkoOleforHHcp+iLEUcmSSzx+26w9gM1LLIV5HfNFBgmuxLdSLU3+yn9+1kOZOEAdYJnZm8GSCtbhkenvIDasjC+auCcvzfXZN9vBp6VIF8kL3zipdrD8Y4Do9cLoEgA0VSGHsiVBadCuI8gUcDZgQmqziEKm37BPWJMmd6Tb5jFlnp4t85leSV31liKjKibkv2KHo7dtm2ADG823N4uTB9nPDaY62bpmlAYe2lar8Q+IdDPr367y2tdyUNT+Sd0+rsdFVuY9nM1/Bm5qo2nQItzk2a4hy/F0WCQYG5G2/nwItNaOG+09xMU0E9LaNM2wuUiqqudVOzPeGV9/gs=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [status.name = _t, Family = _t, #\"Status Rank\" = _t, #\"Is terminal\" = _t]),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"status.name\", type text}, {\"Family\", type text}, {\"Status Rank\", Int64.Type}})",
          "in",
          "    #\"Changed Type\""
        ],
        "kind": "m",
        "lineageTag": "3c8ddbd3-d303-4452-867b-ba344665d548",
        "queryGroup": "03 Supporting Tables\\03.1 Staging\\0.3.1.1 Manual mappings"
      },
      {
        "name": "JIRA Lookup tables",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "description": "All the expandable fields, stashed here for easy reference later",
        "expression": [
          "let",
          "    Source = FetchPages(\"\", 100),",
          "    #\"Expanded records\" = Table.ExpandRecordColumn(Source, \"Column1\", {\"expand\", \"id\", \"self\", \"key\", \"fields\"}, {\"expand\", \"issue ID\", \"issue address\", \"issue key\", \"fields\"}),",
          "    #\"Expanded fields\" = Table.ExpandRecordColumn(#\"Expanded records\", \"fields\", {\"parent\", \"fixVersions\", \"resolution\", \"lastViewed\", \"priority\", \"labels\", \"timeestimate\", \"aggregatetimeoriginalestimate\", \"versions\", \"issuelinks\", \"assignee\", \"status\", \"components\", \"aggregatetimeestimate\", \"creator\", \"subtasks\", \"reporter\", \"aggregateprogress\", \"progress\", \"votes\", \"issuetype\", \"timespent\", \"project\", \"aggregatetimespent\", \"resolutiondate\", \"workratio\", \"watches\", \"created\", \"updated\", \"timeoriginalestimate\", \"description\", \"summary\", \"environment\", \"duedate\"}, {\"parent\", \"fixVersions\", \"resolution\", \"lastViewed\", \"priority\", \"labels\", \"timeestimate\", \"aggregatetimeoriginalestimate\", \"versions\", \"issuelinks\", \"assignee\", \"status\", \"components\", \"aggregatetimeestimate\", \"creator\", \"subtasks\", \"reporter\", \"aggregateprogress\", \"progress\", \"votes\", \"issuetype\", \"timespent\", \"project\", \"aggregatetimespent\", \"resolutiondate\", \"workratio\", \"watches\", \"created\", \"updated\", \"timeoriginalestimate\", \"description\", \"summary\", \"environment\", \"duedate\"}),",
          "    // Resolution: Worse version of status",
          "    // Description: wayyyy to much text, dont need that in report's memory",
          "    // Expand: fields the API can get",
          "    // Watches: don't need to know/report it",
          "    // Versions: would bloat report",
          "    // Linked Issues: would bloat report",
          "    // Subtask: already have parent task if relevant, would bloat",
          "    // Votes: not using votes here",
          "    #\"Removed unneccesary fields\" = Table.RemoveColumns(#\"Expanded fields\",{\"expand\", \"watches\", \"versions\", \"issuelinks\", \"subtasks\", \"votes\", \"resolution\", \"description\"}),",
          "    // Extracted to records from List",
          "    #\"Expanded components\" = Table.ExpandListColumn(#\"Removed unneccesary fields\", \"components\"),",
          "    #\"Expanded components1\" = Table.ExpandRecordColumn(#\"Expanded components\", \"components\", {\"name\"}, {\"components.name\"}),",
          "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Expanded components1\",{\"priority\", \"labels\", \"fixVersions\", \"assignee\", \"status\", \"progress\", \"issuetype\", \"project\"})",
          "in",
          "    #\"Removed Other Columns\""
        ],
        "kind": "m",
        "lineageTag": "32342a4d-5743-4940-a58f-93b3aec6193a",
        "queryGroup": "02 API query\\02.3 Lookup table reference"
      },
      {
        "name": "Issue Families",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"bVRLb9swDP4rRE4bkAbFLjt36Q7tUKBrcut6oGXa0SJLrh7x/O9Hyo/ETS+2KPH58SNfX1d3EFwVO/QEJZ3IuLYhGyFiOK7Wq3s6wX4+rt7WYtB6VxhqwHkg753f8OuPVI/fQSc0aMwaSh2itipCq0kRuAo6549iMHrNPzHZRec1BYge1RGqxEbaWTQ69hKoIozJ8zv9a/kXqAQMkAJ5qB2aIC7FRT//hzwKXQ9aQS4hHjCCJSo5kIOCoPDuSBZK19kNbD1HYc9FD4/aI+wmZG5YAayLQKWOkk5JhiJJ0J+tVh9iCnbivnQqZTARQh8iNWsge9LeWbldix+GUnE1Au+ojFI2y7+s6wyVNWWnz979JZVD87H22MCLzgBe/nJ4CzqERBD7lqDKuSod2GmOMp4vj2K1PxAwrMnEIE1C2FOIsMVA0qPpDC+DyniXLfFz/oRU3FxwaLcQR5watAkNRBKO1Nwhai+jXUZhQummNQTvSbSdXXO670l7McTpEW3oyG/gIeRmoQUcWMR0nRj9e3RwBfHI2SVTM2H+pNvbb98DtOjjgI5BXzOnxGUm3rm6mc93oBJzrrnqBkYsBMsWozpw+gIJ38GzyJPwIEYf6KQyO9fQuFJXeSg8Rc24IxynSrJnTlMrw5oH14lhnXRJQFFtLovOqneD6hUYuU+tcX1u5rwBppsxM2mBdCtPVeWMcV2Ah/3uKWNXiSghX3eZ/W+wI3/SiiY7QS6/ZHf3FJTXhZRznv6xy5TTuIEuB1rsBiFe75LsBR4QocOXmQ0lE8PWibv1VUbk7GoxsFdTP2b5hBbrrL4oYntAW9Myd5bm68Vcsfw8bMuL7bj9lBieWudzAR/3cIDAtelKq5lBXBwajh9yXWIIn6zqXSa0jrKrRz53OjLpzhSWx4HBCwK//Qc=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [issuetype.description = _t, issuetype = _t, Family = _t]),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"issuetype.description\", type text}, {\"issuetype\", type text}, {\"Family\", type text}}),",
          "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"Family\", \"Issue type family\"}, {\"issuetype\", \"Issue type\"}, {\"issuetype.description\", \"Issue type description\"}})",
          "in",
          "    #\"Renamed Columns\""
        ],
        "kind": "m",
        "lineageTag": "a9d59c10-d70f-485e-86a6-f9d5e82e5165",
        "queryGroup": "03 Supporting Tables\\03.1 Staging\\0.3.1.1 Manual mappings"
      },
      {
        "name": "Duplicate Check",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = #\"YourOrg issues\",",
          "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"issue ID\"}),",
          "    #\"Grouped Rows\" = Table.Group(#\"Removed Other Columns\", {\"issue ID\"}, {{\"Instance count\", each Table.RowCount(_), Int64.Type}}),",
          "    #\"Added is duped\" = Table.AddColumn(#\"Grouped Rows\", \"No Dups\", each [Instance count] = 1),",
          "    #\"Grouped on no dups\" = Table.Group(#\"Added is duped\", {\"No Dups\"}, {{\"Instance count\", each Table.RowCount(Table.Distinct(_)), Int64.Type}})",
          "in",
          "    #\"Grouped on no dups\""
        ],
        "kind": "m",
        "lineageTag": "9c4f5d95-8468-429d-b710-76b23652c1a5",
        "queryGroup": "98 Quality check"
      },
      {
        "name": "Uncoded Statuses",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "description": [
          "Can happen when a new board is created with new statues, if those statuses don't name match existing ones. ",
          "",
          "Ideally projects are all set up by JIRA admins, and use org provided statuses, but this is not enforceable"
        ],
        "expression": [
          "let",
          "    Source = #\"Status Codes\",",
          "    #\"Kept Blank Rows\" = Table.SelectRows(Source, each ([Family] = \"\" or [Family] = null)),",
          "    // This col comes from a join against a manually created status ranking table. Any blanks here haven't been put into that table yet",
          "    #\"Grouped Rows\" = Table.Group(#\"Kept Blank Rows\", {\"Status\"}, {{\"Count\", each Table.RowCount(_), Int64.Type}}),",
          "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Grouped Rows\",{\"Status\"}),",
          "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"Status\", \"Uncoded status\"}})",
          "in",
          "    #\"Renamed Columns\""
        ],
        "kind": "m",
        "lineageTag": "a47403bd-5d0b-4654-b325-1efbd92e2e6b",
        "queryGroup": "98 Quality check"
      },
      {
        "name": "JIRA API return",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "description": "Raw output of the JIRA API call",
        "expression": [
          "let",
          "    Source = FetchPages(\"\", 100)",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "114ca295-ab4e-4dcc-af83-3a4ad41b1cbd",
        "queryGroup": "02 API query\\02.2 Query Return"
      }
    ],
    "queryGroups": [
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "00 Params"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "1"
          }
        ],
        "folder": "01 Utilities"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "6"
          }
        ],
        "folder": "99 Testing"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "5"
          }
        ],
        "folder": "98 Quality check"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "3"
          }
        ],
        "folder": "03 Supporting Tables"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "4"
          }
        ],
        "folder": "04 Finalised Tables"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "02 API query\\02.1 Functions"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "1"
          }
        ],
        "description": "All the supporting tables, pulled from 02.3 `JIRA Lookup tables`",
        "folder": "03 Supporting Tables\\03.1 Staging\\03.2 Lookup tables"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "03 Supporting Tables\\03.1 Staging"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "2"
          }
        ],
        "folder": "02 API query"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "1"
          }
        ],
        "folder": "02 API query\\02.2 Query Return"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "description": [
          "These use a manual mapping, which needs to be updated if there are new statuses or new issue type families.",
          "Families are an abstract category added to handle similar statuses"
        ],
        "folder": "03 Supporting Tables\\03.1 Staging\\0.3.1.1 Manual mappings"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "2"
          }
        ],
        "description": "All the expandable columns containing further tables",
        "folder": "02 API query\\02.3 Lookup table reference"
      }
    ],
    "relationships": [
      {
        "name": "0450073e-123d-491d-8c46-ff42e75eea1d",
        "fromColumn": "environment",
        "fromTable": "YourOrg issues",
        "toColumn": "environment",
        "toTable": "Environments Lookup"
      },
      {
        "name": "9363bb38-2951-4ceb-ab8d-aa2f8f398bbb",
        "fromColumn": "status.id",
        "fromTable": "YourOrg issues",
        "toColumn": "id",
        "toTable": "Status Codes"
      },
      {
        "name": "632473e9-5fc9-445a-bf95-5b70749d2a7b",
        "fromColumn": "priority.id",
        "fromTable": "YourOrg issues",
        "toColumn": "id",
        "toTable": "Priorities"
      },
      {
        "name": "fe8dec41-957e-fecf-03e2-97b4e0041ecd",
        "fromColumn": "assignee.accountId",
        "fromTable": "YourOrg issues",
        "toColumn": "accountId",
        "toTable": "Devs"
      },
      {
        "name": "89486a14-8ad0-41d4-9c8f-14bf001c3b8c",
        "fromColumn": "project.id",
        "fromTable": "YourOrg issues",
        "toColumn": "id",
        "toTable": "Projects"
      },
      {
        "name": "152c4afd-80b2-ba1e-8f58-2f03f8bd11aa",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "issue key",
        "fromTable": "YourOrg issues",
        "toColumn": "Child key",
        "toTable": "Linked Issues"
      },
      {
        "name": "da9c952b-0ee3-4d44-b14a-14a00f5c9358",
        "fromColumn": "issuetype.id",
        "fromTable": "YourOrg issues",
        "toColumn": "id",
        "toTable": "Issue Types"
      },
      {
        "name": "98e566c5-5274-4de7-8d66-97d243391fbe",
        "fromColumn": "created - Date",
        "fromTable": "YourOrg issues",
        "toColumn": "Date",
        "toTable": "DateDimensionBI"
      },
      {
        "name": "471c001d-dc50-4d7e-9329-89b36b80cf5b",
        "fromColumn": "updated - Date",
        "fromTable": "YourOrg issues",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "DateDimensionBI"
      },
      {
        "name": "9e31f541-549f-4920-be2d-cf9925fb9280",
        "fromColumn": "Resolution Date Improved - Date",
        "fromTable": "YourOrg issues",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "DateDimensionBI"
      }
    ],
    "sourceQueryCulture": "en-AU",
    "tables": [
      {
        "name": "YourOrg issues",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "timespent",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e10939b9-eeee-4d01-9f95-0e9e9e28003a",
            "sourceColumn": "timespent",
            "summarizeBy": "none"
          },
          {
            "name": "project.id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "79238c10-9bd1-4bb7-87a9-9b586e52b4c9",
            "sourceColumn": "project.id",
            "summarizeBy": "none"
          },
          {
            "name": "aggregatetimespent",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "#,0",
            "lineageTag": "8f50c6af-342b-470b-835b-61b388a33471",
            "sourceColumn": "aggregatetimespent",
            "summarizeBy": "sum"
          },
          {
            "name": "workratio",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f8f771c8-1947-4dfb-ac38-dd0953dd2d33",
            "sourceColumn": "workratio",
            "summarizeBy": "none"
          },
          {
            "name": "lastViewed",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "b6d6ec98-3c7c-4ad5-8b26-ae760b45c3dc",
            "sourceColumn": "lastViewed",
            "summarizeBy": "none"
          },
          {
            "name": "created",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "94a8789a-e901-48dd-8159-4fd06499e21f",
            "sourceColumn": "created",
            "summarizeBy": "none"
          },
          {
            "name": "timeestimate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "89f399ed-6b6a-4f29-9c55-22dff1bf8708",
            "sourceColumn": "timeestimate",
            "summarizeBy": "none"
          },
          {
            "name": "aggregatetimeoriginalestimate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "#,0",
            "lineageTag": "f60ee873-630d-400b-b70a-01bdfb798888",
            "sourceColumn": "aggregatetimeoriginalestimate",
            "summarizeBy": "sum"
          },
          {
            "name": "updated",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "d79d502c-da46-4f6f-8ab5-67bcf5ff9ec7",
            "sourceColumn": "updated",
            "summarizeBy": "none"
          },
          {
            "name": "timeoriginalestimate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "297a2d90-e4e8-44c5-b2b1-fe2218c85e89",
            "sourceColumn": "timeoriginalestimate",
            "summarizeBy": "none"
          },
          {
            "name": "aggregatetimeestimate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "#,0",
            "lineageTag": "66baaddf-345b-496d-89c1-31939250da8f",
            "sourceColumn": "aggregatetimeestimate",
            "summarizeBy": "sum"
          },
          {
            "name": "summary",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "23ee81b9-cb3a-44c2-8347-61e583f425e5",
            "sourceColumn": "summary",
            "summarizeBy": "none"
          },
          {
            "name": "reporter.name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4ce0fac3-9198-4d48-a153-2b4d9e0a3499",
            "sourceColumn": "reporter.name",
            "summarizeBy": "none"
          },
          {
            "name": "reporter.emailAddress",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e36f08f1-7d89-4f01-acd8-fc1690c2ffe9",
            "sourceColumn": "reporter.emailAddress",
            "summarizeBy": "none"
          },
          {
            "name": "reporter.displayName",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c479bed2-3c6e-450f-80af-ebea26f80947",
            "sourceColumn": "reporter.displayName",
            "summarizeBy": "none"
          },
          {
            "name": "reporter.active",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "170ec28b-8053-40eb-9888-dee786ff7a7c",
            "sourceColumn": "reporter.active",
            "summarizeBy": "none"
          },
          {
            "name": "aggregateprogress.progress",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "02d0b01b-2c8d-4095-94a5-65e68ee31ffe",
            "sourceColumn": "aggregateprogress.progress",
            "summarizeBy": "none"
          },
          {
            "name": "aggregateprogress.total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "37a5a702-5d71-41ee-8f97-fe6d052f6601",
            "sourceColumn": "aggregateprogress.total",
            "summarizeBy": "none"
          },
          {
            "name": "environment",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "aec34014-563a-4aa7-a2d6-f782cb078d2e",
            "sourceColumn": "environment",
            "summarizeBy": "none"
          },
          {
            "name": "duedate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "dataType": "dateTime",
            "formatString": "yyyy/mm/dd",
            "lineageTag": "bded1d46-48cc-4ba3-aecc-4b032d5dde9d",
            "sourceColumn": "duedate",
            "summarizeBy": "none"
          },
          {
            "name": "progress.progress",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "59c77c6e-c165-4ad4-8a49-e5c09a2c0e9f",
            "sourceColumn": "progress.progress",
            "summarizeBy": "none"
          },
          {
            "name": "progress.total",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "aa93382d-c064-4dce-be23-27b4d7129836",
            "sourceColumn": "progress.total",
            "summarizeBy": "none"
          },
          {
            "name": "parent.id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "580bd122-f09e-493d-ac70-9d3bf6edf097",
            "sourceColumn": "parent.id",
            "summarizeBy": "none"
          },
          {
            "name": "Days since Created",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "cc8f1933-467e-4584-af03-5d66ff976a2a",
            "sourceColumn": "Days since Created",
            "summarizeBy": "average"
          },
          {
            "name": "Days since Modified",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "dee04062-4c60-487a-9b31-f762e8c80dc3",
            "sourceColumn": "Days since Modified",
            "summarizeBy": "average"
          },
          {
            "name": "issue ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a98a8bec-1d8c-4703-a8a5-5fc304cc6feb",
            "sourceColumn": "issue ID",
            "summarizeBy": "none"
          },
          {
            "name": "issue address",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b7728aca-9df6-41a0-9aa5-8ad1805af8ab",
            "sourceColumn": "issue address",
            "summarizeBy": "none"
          },
          {
            "name": "issue key",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c39b355a-a7c0-43c4-b802-fb0ebcff3af5",
            "sourceColumn": "issue key",
            "summarizeBy": "none"
          },
          {
            "name": "parent.key",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "238450ee-40d7-4ba6-860d-03b6ef098a81",
            "sourceColumn": "parent.key",
            "summarizeBy": "none"
          },
          {
            "name": "status.id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "824d4deb-e10f-4f01-885e-bc9077b20a3f",
            "sourceColumn": "status.id",
            "summarizeBy": "none"
          },
          {
            "name": "creator.accountId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "cdf703e3-89f3-4b7d-8108-5434f4ee8f62",
            "sourceColumn": "creator.accountId",
            "summarizeBy": "none"
          },
          {
            "name": "creator.displayName",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c4adbc08-4bfe-47d0-911f-d8285cffc258",
            "sourceColumn": "creator.displayName",
            "summarizeBy": "none"
          },
          {
            "name": "Resolution Date Improved",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "5e5cebbd-478b-4c96-a4f2-27885e573dad",
            "sourceColumn": "Resolution Date Improved",
            "summarizeBy": "none"
          },
          {
            "name": "created - Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "dataType": "dateTime",
            "formatString": "yyyy/mm/dd",
            "lineageTag": "e19930e4-58d2-4db4-b114-11e392c28fef",
            "sourceColumn": "created - Date",
            "summarizeBy": "none"
          },
          {
            "name": "updated - Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "dataType": "dateTime",
            "formatString": "yyyy/mm/dd",
            "lineageTag": "a168633b-d96e-4478-96a1-d601f2a5f678",
            "sourceColumn": "updated - Date",
            "summarizeBy": "none"
          },
          {
            "name": "Resolution Date Improved - Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "dataType": "dateTime",
            "formatString": "yyyy/mm/dd",
            "lineageTag": "aeebea60-7670-44d7-b514-4c08f3ed02fc",
            "sourceColumn": "Resolution Date Improved - Date",
            "summarizeBy": "none"
          },
          {
            "name": "priority.id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e885400a-aad8-4a36-97c9-863d4b5e6188",
            "sourceColumn": "priority.id",
            "summarizeBy": "none"
          },
          {
            "name": "assignee.accountId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "66738d6e-19b2-4cef-9b43-b342de853ed7",
            "sourceColumn": "assignee.accountId",
            "summarizeBy": "none"
          },
          {
            "name": "issuetype.id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "03d10392-98a6-4827-8e7b-c852e4bf1dd0",
            "sourceColumn": "issuetype.id",
            "summarizeBy": "none"
          },
          {
            "name": "issuetype.isSubTask",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e3bc4f51-6832-4e5b-994a-54dcbf700a8b",
            "sourceColumn": "issuetype.isSubTask",
            "summarizeBy": "none"
          },
          {
            "name": "Days to Resolve",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "9c5578e8-7ca9-440d-839f-bb498d4c7872",
            "sourceColumn": "Days to Resolve",
            "summarizeBy": "sum"
          },
          {
            "name": "fixVersions",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "20196cb4-e69a-478a-bb99-ab3c6a0d9155",
            "sourceColumn": "fixVersions",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "4adae639-dbf3-4b0d-8016-e6bce3b421c3",
        "partitions": [
          {
            "name": "YourOrg issues",
            "mode": "import",
            "queryGroup": "04 Finalised Tables",
            "source": {
              "expression": [
                "let",
                "    Source = #\"JIRA API return\",",
                "    #\"Expanded records\" = Table.ExpandRecordColumn(Source, \"Column1\", {\"expand\", \"id\", \"self\", \"key\", \"fields\"}, {\"expand\", \"issue ID\", \"issue address\", \"issue key\", \"fields\"}),",
                "    #\"Expanded fields\" = Table.ExpandRecordColumn(#\"Expanded records\", \"fields\", {\"parent\", \"fixVersions\", \"resolution\", \"lastViewed\", \"priority\", \"labels\", \"timeestimate\", \"aggregatetimeoriginalestimate\", \"versions\", \"issuelinks\", \"assignee\", \"status\", \"components\", \"aggregatetimeestimate\", \"creator\", \"subtasks\", \"reporter\", \"aggregateprogress\", \"progress\", \"votes\", \"issuetype\", \"timespent\", \"project\", \"aggregatetimespent\", \"resolutiondate\", \"workratio\", \"watches\", \"created\", \"updated\", \"timeoriginalestimate\", \"description\", \"summary\", \"environment\", \"duedate\"}, {\"parent\", \"fixVersions\", \"resolution\", \"lastViewed\", \"priority\", \"labels\", \"timeestimate\", \"aggregatetimeoriginalestimate\", \"versions\", \"issuelinks\", \"assignee\", \"status\", \"components\", \"aggregatetimeestimate\", \"creator\", \"subtasks\", \"reporter\", \"aggregateprogress\", \"progress\", \"votes\", \"issuetype\", \"timespent\", \"project\", \"aggregatetimespent\", \"resolutiondate\", \"workratio\", \"watches\", \"created\", \"updated\", \"timeoriginalestimate\", \"description\", \"summary\", \"environment\", \"duedate\"}),",
                "    // Resolution: Worse version of status",
                "    // Description: wayyyy to much text, dont need that in report's memory",
                "    // Expand: fields the API can get",
                "    // Watches: don't need to know/report it",
                "    // Versions: would bloat report",
                "    // Linked Issues: would bloat report",
                "    // Subtask: already have parent task if relevant, would bloat",
                "    // Votes: not using votes here",
                "    #\"Removed unneccesary fields\" = Table.RemoveColumns(#\"Expanded fields\",{\"expand\", \"watches\", \"versions\", \"issuelinks\", \"subtasks\", \"votes\", \"resolution\", \"description\", \"labels\", \"components\"}),",
                "    #\"Filtered issue not null or blank\" = Table.SelectRows(#\"Removed unneccesary fields\", each [issue ID] <> null and [issue ID] <> \"\"),",
                "    #\"Expanded issuetype\" = Table.ExpandRecordColumn(#\"Filtered issue not null or blank\", \"issuetype\", {\"id\", \"subtask\"}, {\"issuetype.id\", \"issuetype.isSubTask\"}),",
                "    #\"Expanded project\" = Table.ExpandRecordColumn(#\"Expanded issuetype\", \"project\", {\"id\"}, {\"project.id\"}),",
                "    // Inner join so we exclude non-desired projects, i.e. Service Management",
                "    #\"Inner Join w/ Projects table\" = Table.NestedJoin(#\"Expanded project\", {\"project.id\"}, Projects, {\"id\"}, \"Projects\", JoinKind.Inner),",
                "    #\"Expanded priority\" = Table.ExpandRecordColumn(#\"Inner Join w/ Projects table\", \"priority\", {\"id\"}, {\"priority.id\"}),",
                "    #\"Expanded assignee\" = Table.ExpandRecordColumn(#\"Expanded priority\", \"assignee\", {\"accountId\"}, {\"assignee.accountId\"}),",
                "    #\"Expanded status\" = Table.ExpandRecordColumn(#\"Expanded assignee\", \"status\", {\"id\"}, {\"status.id\"}),",
                "    #\"Expanded reporter\" = Table.ExpandRecordColumn(#\"Expanded status\", \"reporter\", {\"name\", \"emailAddress\", \"displayName\", \"active\"}, {\"reporter.name\", \"reporter.emailAddress\", \"reporter.displayName\", \"reporter.active\"}),",
                "    #\"Expanded aggregateprogress\" = Table.ExpandRecordColumn(#\"Expanded reporter\", \"aggregateprogress\", {\"progress\", \"total\"}, {\"aggregateprogress.progress\", \"aggregateprogress.total\"}),",
                "    #\"Expanded progress\" = Table.ExpandRecordColumn(#\"Expanded aggregateprogress\", \"progress\", {\"progress\", \"total\"}, {\"progress.progress\", \"progress.total\"}),",
                "    #\"Expanded parent\" = Table.ExpandRecordColumn(#\"Expanded progress\", \"parent\", {\"id\", \"key\"}, {\"parent.id\", \"parent.key\"}),",
                "    #\"Expanded creator\" = Table.ExpandRecordColumn(#\"Expanded parent\", \"creator\", {\"accountId\", \"displayName\"}, {\"creator.accountId\", \"creator.displayName\"}),",
                "    #\"Changed Type duedate\" = Table.TransformColumnTypes(#\"Expanded creator\",{{\"duedate\", type date}}),",
                "    // Clean up for matching into lookup table",
                "    #\"Uppercased environment\" = Table.TransformColumns(Table.TransformColumnTypes(#\"Changed Type duedate\", {{\"environment\", type text}}, \"en-AU\"),{}),",
                "    #\"Replaced Environement blank -> null\" = Table.ReplaceValue(#\"Uppercased environment\",\"\",null,Replacer.ReplaceValue,{\"environment\"}),",
                "    #\"Merged w status\" = Table.NestedJoin(#\"Replaced Environement blank -> null\", {\"status.id\"}, #\"Status Codes\", {\"id\"}, \"Status Codes\", JoinKind.LeftOuter),",
                "    #\"Expanded status is terminal\" = Table.ExpandTableColumn(#\"Merged w status\", \"Status Codes\", {\"Is terminal\"}, {\"Status Codes.Is terminal\"}),",
                "    // Needed to add a way to infill resolved data for a few issue types which don't automatically create a resolution date in JIRA. Checks against the status codes table's `is terminal` col",
                "    // Using last modified instead where resolution = NULL",
                "    #\"Added Improved Resolution Date\" = Table.AddColumn(#\"Expanded status is terminal\", \"Resolution Date Improved\", each if (",
                "\t    [resolutiondate]  = null ",
                "\t    and [Status Codes.Is terminal] = true",
                "    ) then [updated] // if nothing found, just give the null",
                "    else [resolutiondate]),",
                "    #\"removed status is terminal\" = Table.RemoveColumns(#\"Added Improved Resolution Date\",{\"Status Codes.Is terminal\"}),",
                "    // LDS was overseas, Andrew @ SKEDA is in Canberra tz, Davide @ SKEDA is in Sydney TZ",
                "    #\"Changed Type time to timezoned\" = Table.TransformColumnTypes(#\"removed status is terminal\",{{\"lastViewed\", type datetimezone}, {\"updated\", type datetimezone}, {\"created\", type datetimezone}, {\"resolutiondate\", type datetimezone}, {\"Resolution Date Improved\", type datetimezone}}),",
                "    #\"Added days since mod\" = Table.AddColumn(#\"Changed Type time to timezoned\", \"Days since Modified\", each Duration.Days(DateTime.Date(DateTime.LocalNow()) - DateTime.Date([updated]))),",
                "    #\"Added days since created\" = Table.AddColumn(#\"Added days since mod\", \"Days since Created\", each Duration.Days(DateTime.Date(DateTime.LocalNow()) - DateTime.Date([created]))),",
                "    #\"Removed resolution date, replaced by improved version\" = Table.RemoveColumns(#\"Added days since created\",{\"resolutiondate\"}),",
                "    #\"Added Days taken to resolve\" = Table.AddColumn(#\"Removed resolution date, replaced by improved version\", \"Days to Resolve\", each Duration.Days(DateTime.Date([Resolution Date Improved]) - DateTime.Date([created]))),",
                "    #\"Changed resolved days to num\" = Table.TransformColumnTypes(#\"Added Days taken to resolve\",{{\"Days to Resolve\", Int64.Type}}),",
                "    #\"Duplicated created to date only\" = Table.DuplicateColumn(#\"Changed resolved days to num\", \"created\", \"created - Date\"),",
                "    #\"Duplicated updated to date only\" = Table.DuplicateColumn(#\"Duplicated created to date only\", \"updated\", \"updated - Date\"),",
                "    #\"Duplicated resolution to date only\" = Table.DuplicateColumn(#\"Duplicated updated to date only\", \"Resolution Date Improved\", \"Resolution Date Improved - Date\"),",
                "    #\"Changed duped datetimes to dates\" = Table.TransformColumnTypes(#\"Duplicated resolution to date only\",{{\"created - Date\", type date}, {\"updated - Date\", type date}, {\"Resolution Date Improved - Date\", type date}})",
                "in",
                "    #\"Changed duped datetimes to dates\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Status Codes",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Family",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "d9f1f8c4-46a8-4885-b947-2f3802d22ba7",
            "sortByColumn": "Status Rank",
            "sourceColumn": "Family",
            "summarizeBy": "none"
          },
          {
            "name": "Status Rank",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "7c521ef3-e96c-4e0b-9e60-6393c332f78a",
            "sourceColumn": "Status Rank",
            "summarizeBy": "none"
          },
          {
            "name": "description",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b5cb0977-f86d-4a14-a55f-4042c2fe9b19",
            "sourceColumn": "description",
            "summarizeBy": "none"
          },
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "190dad8f-5e4e-4023-809c-a06bc9462312",
            "sourceColumn": "id",
            "summarizeBy": "none"
          },
          {
            "name": "Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "3a54cb6e-10ae-44fa-ac80-d514deafe39d",
            "sortByColumn": "Status Rank",
            "sourceColumn": "Status",
            "summarizeBy": "none"
          },
          {
            "name": "Is terminal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "68730141-b389-49ff-9286-b3cbedfbaf7b",
            "sourceColumn": "Is terminal",
            "summarizeBy": "none"
          }
        ],
        "description": "All the statuses in JIRA",
        "lineageTag": "4d93aed3-0bb0-4100-aace-a437ba1ed31f",
        "partitions": [
          {
            "name": "Status Codes",
            "mode": "import",
            "queryGroup": "03 Supporting Tables\\03.1 Staging\\03.2 Lookup tables",
            "source": {
              "expression": [
                "let",
                "    Source = #\"JIRA Lookup tables\",",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"status\"}),",
                "    #\"Expanded status\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"status\", {\"description\", \"id\", \"name\"}, {\"description\", \"id\", \"name\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Expanded status\"),",
                "    #\"Merged Queries\" = Table.NestedJoin(#\"Removed Duplicates\", {\"name\"}, #\"Status Ranks\", {\"status.name\"}, \"Status Ranks\", JoinKind.LeftOuter),",
                "    #\"Expanded Status Ranks\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Status Ranks\", {\"Family\", \"Is terminal\", \"Status Rank\"}, {\"Family\", \"Is terminal\", \"Status Rank\"}),",
                "    #\"Sorted Rows\" = Table.Sort(#\"Expanded Status Ranks\",{{\"id\", Order.Ascending}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Sorted Rows\",{{\"name\", \"Status\"}}),",
                "    #\"Changed types\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"id\", type text}, {\"Is terminal\", type logical}})",
                "in",
                "    #\"Changed types\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Environments Lookup",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "environment",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "d0dde667-42c2-4ff4-bb34-26c3ce2ec44a",
            "sortByColumn": "Sort Order",
            "sourceColumn": "environment",
            "summarizeBy": "none"
          },
          {
            "name": "Env Cleaned",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d6ad891d-b7a8-4afb-869d-25319a8e4104",
            "sourceColumn": "Env Cleaned",
            "summarizeBy": "none"
          },
          {
            "name": "Sort Order",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "15ea3bde-1b2b-45d3-92af-7dff84ff4da8",
            "sourceColumn": "Sort Order",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "8e1336ec-5282-4676-a053-971ab75fb8ea",
        "partitions": [
          {
            "name": "Environments Lookup",
            "mode": "import",
            "queryGroup": "03 Supporting Tables\\03.1 Staging\\0.3.1.1 Manual mappings",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"dY9BSwNBDIX/SpiThdldqp4EkYUV8WSxVZBtkbCTdhbHzTqTsfTfm67Vk15eQvK+l5m2NYvHh8bYn3JhNrY1ze2zhad6ZWG5urOAg4PTvg5B9XJyLSK73EnPwx88wJmjzyIQxqEfduX7wRMG8VuOod9SyXFXYp4pombV+QRmFO31sur59yQpDR07Ai8ypquqUlPhu38Sq5s9x7cxYEevR+q6Wdb39QuI7xMkzzk4wCxcjDzmgEK6IVibvUcBtRw4RzhGwJQxXV4b+MiUTj/9fd3mCw==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [environment = _t, #\"Env Cleaned\" = _t, #\"Sort Order\" = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"environment\", type text}, {\"Env Cleaned\", type text}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Changed Type\",\"null\",null,Replacer.ReplaceValue,{\"environment\", \"Env Cleaned\"}),",
                "    #\"Uppercased Text\" = Table.TransformColumns(#\"Replaced Value\",{{\"environment\", Text.Upper, type text}})",
                "in",
                "    #\"Uppercased Text\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "DateDimensionBI",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "5ce257f7-a227-4808-a1fe-51cf46873f0f",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "bfba96dd-9215-41a6-a2fe-1a4c51e3497e",
            "sourceColumn": "Year",
            "summarizeBy": "sum"
          },
          {
            "name": "Start of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "ca696202-2f90-44f9-b258-8d873397d77a",
            "sourceColumn": "Start of Year",
            "summarizeBy": "none"
          },
          {
            "name": "End of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "0e781b80-b31c-4758-9026-cfe7975c7160",
            "sourceColumn": "End of Year",
            "summarizeBy": "none"
          },
          {
            "name": "Month Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f2c838c9-ffc8-4ad5-b723-79db8411bd41",
            "sourceColumn": "Month Number",
            "summarizeBy": "sum"
          },
          {
            "name": "Month Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2457bd2b-c325-450f-b9eb-6e54810bfee9",
            "sourceColumn": "Month Name",
            "summarizeBy": "none"
          },
          {
            "name": "Month Start Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "1132f8dc-55de-4cd1-aa40-963b5740c0ff",
            "sourceColumn": "Month Start Date",
            "summarizeBy": "none"
          },
          {
            "name": "Month End Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "e53c6e6a-c4a0-4cb5-b6d1-7c76f51afd0c",
            "sourceColumn": "Month End Date",
            "summarizeBy": "none"
          },
          {
            "name": "Days in Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "009e0532-9cad-4229-a0c6-673021a0120f",
            "sourceColumn": "Days in Month",
            "summarizeBy": "sum"
          },
          {
            "name": "Quarter Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "418d48ea-855f-4f48-b15f-ad5bb825088e",
            "sourceColumn": "Quarter Number",
            "summarizeBy": "sum"
          },
          {
            "name": "Quarter Start Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "8d1a3155-6757-40ce-aa22-4bde595bda15",
            "sourceColumn": "Quarter Start Date",
            "summarizeBy": "none"
          },
          {
            "name": "Quarter End Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "e335020d-213d-42fa-b60e-f8e050414779",
            "sourceColumn": "Quarter End Date",
            "summarizeBy": "none"
          },
          {
            "name": "Week Number of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "d2ec176d-89d6-410a-a64e-a2611eed7eac",
            "sourceColumn": "Week Number of Year",
            "summarizeBy": "sum"
          },
          {
            "name": "Week Number of Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "de280321-a975-4217-ab6a-72de892b0037",
            "sourceColumn": "Week Number of Month",
            "summarizeBy": "sum"
          },
          {
            "name": "Week Start Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "0927cf9f-c2d2-48ab-95f2-fecb54e21293",
            "sourceColumn": "Week Start Date",
            "summarizeBy": "none"
          },
          {
            "name": "Week End Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "1475501a-9cf3-4c7a-80e7-24f3b1a91f4b",
            "sourceColumn": "Week End Date",
            "summarizeBy": "none"
          },
          {
            "name": "Day of Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "15dca206-bea1-4a32-b9a9-0c037970381d",
            "sourceColumn": "Day of Month",
            "summarizeBy": "sum"
          },
          {
            "name": "Day of Week",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5702f848-2664-4521-9aba-fb0afd18cff0",
            "sourceColumn": "Day of Week",
            "summarizeBy": "sum"
          },
          {
            "name": "Day of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "02083b9b-1aa2-416a-adfe-683085964ed1",
            "sourceColumn": "Day of Year",
            "summarizeBy": "sum"
          },
          {
            "name": "Day Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "52228ede-5de7-4010-a8fb-94f1f8f9165c",
            "sourceColumn": "Day Name",
            "summarizeBy": "none"
          },
          {
            "name": "t-90",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "2ab6b170-568a-4c24-9f8f-5715e2f3bee4",
            "sourceColumn": "t-90",
            "summarizeBy": "none"
          },
          {
            "name": "isFuture",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "f5591d8d-38ad-49a1-8712-47fa95af19c3",
            "sourceColumn": "isFuture",
            "summarizeBy": "none"
          },
          {
            "name": "Reporting Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "9a428c26-3ff7-4971-b860-dc016af42693",
            "sourceColumn": "Reporting Month",
            "summarizeBy": "none"
          },
          {
            "name": "Reporting Month - Last year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "1f6685be-4031-4bef-b312-c66510e088dc",
            "sourceColumn": "Reporting Month - Last year",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "47b9e66b-7026-4e3f-8bbf-27bb11fd5c56",
        "partitions": [
          {
            "name": "DateDimensionBI",
            "mode": "import",
            "queryGroup": "01 Utilities",
            "source": {
              "expression": [
                "let",
                "    Source = PowerPlatform.Dataflows(null),",
                "    Workspaces = Source{[Id=\"Workspaces\"]}[Data],",
                "    #\"6f7c04d6-f8ec-4722-a220-364c2598401d\" = Workspaces{[workspaceId=\"6f7c04d6-f8ec-4722-a220-364c2598401d\"]}[Data],",
                "    #\"b9ac9667-3d19-4d70-8128-20287e809db0\" = #\"6f7c04d6-f8ec-4722-a220-364c2598401d\"{[dataflowId=\"b9ac9667-3d19-4d70-8128-20287e809db0\"]}[Data],",
                "    DateDimensionBI_ = #\"b9ac9667-3d19-4d70-8128-20287e809db0\"{[entity=\"DateDimensionBI\",version=\"\"]}[Data]",
                "in",
                "    DateDimensionBI_"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Report last refresh",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Report last refreshed",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "4436e61c-452f-43bf-bfce-8181544214e2",
            "sourceColumn": "Report last refreshed",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "bf9b8781-8e93-477f-a782-9485f598984b",
        "partitions": [
          {
            "name": "Report last refresh",
            "mode": "import",
            "queryGroup": "01 Utilities",
            "source": {
              "expression": [
                "let",
                "    Source = DateTime.LocalNow(),",
                "    #\"Converted to Table\" = #table(1, {{Source}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Converted to Table\",{{\"Column1\", type datetime}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"Column1\", \"Report last refreshed\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "MeasuresTable",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "lineageTag": "fd0df1c5-53ce-4997-9be9-4f6abbd43477",
        "measures": [
          {
            "name": "Blocked Tickets",
            "expression": [
              "CALCULATE(",
              "    [Tickets]",
              "    , 'Status Codes'[Family] = \"Blocked\"",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "bb3b243f-5fb3-465d-844a-a721767f55c1"
          },
          {
            "name": "Cancelled Tickets",
            "expression": [
              "CALCULATE(",
              "    [Tickets]",
              "    , 'Status Codes'[Family] = \"Cancelled\"",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "3c0c9e24-6c1a-47d2-b7df-b2b4a9a0cb4a"
          },
          {
            "name": "Waiting Tickets",
            "expression": [
              "CALCULATE(",
              "    [Tickets]",
              "    , (",
              "        'Status Codes'[Family] = \"Waiting\" ",
              "        || 'Status Codes'[Family] = \"Awaiting Business\"",
              "    )",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "d64f2918-cf4c-4553-b2ac-a7f15b16d911"
          },
          {
            "name": "Active Tickets",
            "expression": [
              "CALCULATE(",
              "    [Tickets]",
              "    , NOT(",
              "\t    'Status Codes'[Family] = \"Blocked\"",
              "\t    || 'Status Codes'[Family] = \"Cancelled\"",
              "\t    || 'Status Codes'[Family] = \"Done\" ",
              "\t    ||  'Status Codes'[Family] = \"Cloned\"",
              "\t    ||'Status Codes'[Family] = \"Waiting\" ",
              "        || 'Status Codes'[Family] = \"Awaiting Business\"",
              "    ) // end not - can't just subtrack the other statuses bc it goes wobbly when filtering by status",
              ") // end calculate"
            ],
            "formatString": "0",
            "lineageTag": "42830f16-d860-407d-be4a-33e7d0d1dacd"
          },
          {
            "name": "Resolved Tickets",
            "expression": [
              "CALCULATE(",
              "    [Tickets]",
              "    , 'Status Codes'[Family] = \"Done\" ||  'Status Codes'[Family] = \"Cloned\"",
              ") // end calc"
            ],
            "formatString": "0",
            "lineageTag": "1dad6b8e-4075-40bd-b8ea-bdb7b38de540"
          },
          {
            "name": "Tickets",
            "expression": [
              "CALCULATE(",
              "    DISTINCTCOUNT('YourOrg issues'[issue ID])",
              "    , USERELATIONSHIP('YourOrg issues'[created - Date], DateDimensionBI[Date])",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "c5203401-2dfd-4c57-a618-3fd1a7f3b273"
          }
        ],
        "partitions": [
          {
            "name": "MeasuresTable",
            "mode": "import",
            "queryGroup": "01 Utilities",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Priorities",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "self",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "WebUrl",
            "dataType": "string",
            "lineageTag": "e58efa64-7aed-45ab-af30-1b1cd4188926",
            "sourceColumn": "self",
            "summarizeBy": "none"
          },
          {
            "name": "Priority",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "934aa2c7-d03e-4b6d-bdd3-d8d264dc5764",
            "sortByColumn": "id",
            "sourceColumn": "Priority",
            "summarizeBy": "none"
          },
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ce8e9cd7-85df-499a-8507-dc31f1b1e580",
            "sourceColumn": "id",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "1e069bc1-10d3-4ecc-8d60-778ef46322f6",
        "partitions": [
          {
            "name": "Priorities",
            "mode": "import",
            "queryGroup": "03 Supporting Tables\\03.1 Staging\\03.2 Lookup tables",
            "source": {
              "expression": [
                "let",
                "    Source = #\"JIRA Lookup tables\",",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"priority\"}),",
                "    #\"Expanded priority\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"priority\", {\"self\", \"name\", \"id\"}, {\"self\", \"name\", \"id\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Expanded priority\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Duplicates\",{{\"name\", \"Priority\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"id\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Fixes",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "self",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "WebUrl",
            "dataType": "string",
            "lineageTag": "a0b05bcb-0e64-4dea-bc07-ada2da36a67c",
            "sourceColumn": "self",
            "summarizeBy": "none"
          },
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c38deffb-cc89-49c3-9b50-7296065b1677",
            "sourceColumn": "id",
            "summarizeBy": "none"
          },
          {
            "name": "description",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "71d17bf2-4a40-4408-9ff6-66dd21d7b887",
            "sourceColumn": "description",
            "summarizeBy": "none"
          },
          {
            "name": "Fix",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "78641c9c-3161-42e3-83a1-ba9a76d35c02",
            "sourceColumn": "Fix",
            "summarizeBy": "none"
          },
          {
            "name": "archived",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5cea3313-7e0d-4d3b-ae26-2e5260618b91",
            "sourceColumn": "archived",
            "summarizeBy": "none"
          },
          {
            "name": "released",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5cad35e7-1c6b-4dc8-9b0f-92bb05b43b7c",
            "sourceColumn": "released",
            "summarizeBy": "none"
          },
          {
            "name": "releaseDate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "dataType": "dateTime",
            "formatString": "yyyy/mm/dd",
            "lineageTag": "bfca6da0-ce72-4881-a790-71d6d61e55f0",
            "sourceColumn": "releaseDate",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "ea8878f1-77ef-4706-b487-d73627e64de3",
        "partitions": [
          {
            "name": "Fixes",
            "mode": "import",
            "queryGroup": "03 Supporting Tables\\03.1 Staging\\03.2 Lookup tables",
            "source": {
              "expression": [
                "let",
                "    Source = #\"JIRA Lookup tables\",",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"fixVersions\"}),",
                "    #\"Expanded fixVersions\" = Table.ExpandListColumn(#\"Removed Other Columns\", \"fixVersions\"),",
                "    #\"Expanded fixVersions1\" = Table.ExpandRecordColumn(#\"Expanded fixVersions\", \"fixVersions\", {\"self\", \"id\", \"description\", \"name\", \"archived\", \"released\", \"releaseDate\"}, {\"self\", \"id\", \"description\", \"name\", \"archived\", \"released\", \"releaseDate\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Expanded fixVersions1\"),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Duplicates\", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {\"\", null}))),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Blank Rows\",{{\"releaseDate\", type date}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"name\", \"Fix\"}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"id\", type text}})",
                "in",
                "    #\"Changed Type1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Devs",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "self",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "WebUrl",
            "dataType": "string",
            "lineageTag": "869cfc83-2278-4e03-85ea-41ae5e5141f7",
            "sourceColumn": "self",
            "summarizeBy": "none"
          },
          {
            "name": "accountId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "031918be-69ac-4f27-b07d-9a20e519c203",
            "sourceColumn": "accountId",
            "summarizeBy": "none"
          },
          {
            "name": "emailAddress",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "941507bb-0e17-4d60-92c8-7eb99aac2046",
            "sourceColumn": "emailAddress",
            "summarizeBy": "none"
          },
          {
            "name": "avatarUrls.48x48",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "ImageUrl",
            "dataType": "string",
            "lineageTag": "538c0a02-4dd4-4cfd-83bb-fd63878ffe8d",
            "sourceColumn": "avatarUrls.48x48",
            "summarizeBy": "none"
          },
          {
            "name": "avatarUrls.24x24",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "ImageUrl",
            "dataType": "string",
            "lineageTag": "ef420db2-0aa0-4ba0-ab76-9d0ad724f394",
            "sourceColumn": "avatarUrls.24x24",
            "summarizeBy": "none"
          },
          {
            "name": "avatarUrls.16x16",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "ImageUrl",
            "dataType": "string",
            "lineageTag": "87e78b98-5eb6-4212-8981-67b88e332ebd",
            "sourceColumn": "avatarUrls.16x16",
            "summarizeBy": "none"
          },
          {
            "name": "avatarUrls.32x32",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "ImageUrl",
            "dataType": "string",
            "lineageTag": "93ac0aa3-d287-405a-b2ca-e281ae2c713c",
            "sourceColumn": "avatarUrls.32x32",
            "summarizeBy": "none"
          },
          {
            "name": "displayName",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "43d1d4d8-9acd-41e5-b0f8-61c242f6ebc8",
            "sourceColumn": "displayName",
            "summarizeBy": "none"
          },
          {
            "name": "active",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "f51484b1-dba9-40f7-b5bf-94b562801e53",
            "sourceColumn": "active",
            "summarizeBy": "none"
          },
          {
            "name": "timeZone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a195dc48-7cb7-404e-870c-ad8e907e9fff",
            "sourceColumn": "timeZone",
            "summarizeBy": "none"
          },
          {
            "name": "accountType",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "91a6e296-162c-419d-83d3-a062ff96fa86",
            "sourceColumn": "accountType",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "a942d02d-b409-471a-b5cd-c5c5d8a5ce67",
        "partitions": [
          {
            "name": "Devs",
            "mode": "import",
            "queryGroup": "03 Supporting Tables\\03.1 Staging\\03.2 Lookup tables",
            "source": {
              "expression": [
                "let",
                "    Source = #\"JIRA Lookup tables\",",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"assignee\"}),",
                "    #\"Expanded assignee\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"assignee\", {\"self\", \"accountId\", \"emailAddress\", \"avatarUrls\", \"displayName\", \"active\", \"timeZone\", \"accountType\"}, {\"self\", \"accountId\", \"emailAddress\", \"avatarUrls\", \"displayName\", \"active\", \"timeZone\", \"accountType\"}),",
                "    #\"Expanded assignee.avatarUrls\" = Table.ExpandRecordColumn(#\"Expanded assignee\", \"avatarUrls\", {\"48x48\", \"24x24\", \"16x16\", \"32x32\"}, {\"avatarUrls.48x48\", \"avatarUrls.24x24\", \"avatarUrls.16x16\", \"avatarUrls.32x32\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Expanded assignee.avatarUrls\"),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Duplicates\", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {\"\", null}))),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Blank Rows\",{{\"active\", type logical}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Linked Issues",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "columns": [
          {
            "name": "Child key",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8a29917f-f4ac-4119-874c-d651005905c9",
            "sourceColumn": "Child key",
            "summarizeBy": "none"
          },
          {
            "name": "Parent key",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "00541337-d59d-4116-9cae-be1d64d96473",
            "sourceColumn": "Parent key",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "f47a492b-6658-47bf-b4b9-41d95de0075a",
        "partitions": [
          {
            "name": "Linked Issues",
            "mode": "import",
            "queryGroup": "04 Finalised Tables",
            "source": {
              "expression": [
                "let",
                "    Source = #\"YourOrg issues\",",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"issue key\", \"parent.key\"}),",
                "    #\"removed rows with no parents\" = Table.SelectRows(#\"Removed Other Columns\", each ([parent.key] <> null)),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"removed rows with no parents\",{{\"issue key\", \"Child key\"}, {\"parent.key\", \"Parent key\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Projects",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "self",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "WebUrl",
            "dataType": "string",
            "lineageTag": "642774ac-2035-4624-b076-54df223db572",
            "sourceColumn": "self",
            "summarizeBy": "none"
          },
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a86b9cf2-6dbc-44ca-a3cc-84e53cc241ee",
            "sourceColumn": "id",
            "summarizeBy": "none"
          },
          {
            "name": "key",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ea0eefd1-26da-4f39-9010-8454ba6040ef",
            "sourceColumn": "key",
            "summarizeBy": "none"
          },
          {
            "name": "Project",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "117dd649-6ad9-4ee9-82c5-0e5217da2c31",
            "sourceColumn": "Project",
            "summarizeBy": "none"
          },
          {
            "name": "projectTypeKey",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ffeeb2b3-293b-47ba-b8b6-8e1b525f5828",
            "sourceColumn": "projectTypeKey",
            "summarizeBy": "none"
          },
          {
            "name": "simplified",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "84013e2b-9dec-44ee-9c57-1262a9cbadd1",
            "sourceColumn": "simplified",
            "summarizeBy": "none"
          },
          {
            "name": "avatarUrls.48x48",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "ImageUrl",
            "dataType": "string",
            "lineageTag": "9d44f819-281e-4d84-ae23-d537fef3ecba",
            "sourceColumn": "avatarUrls.48x48",
            "summarizeBy": "none"
          },
          {
            "name": "avatarUrls.24x24",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "ImageUrl",
            "dataType": "string",
            "lineageTag": "29261b7d-32a3-4ac5-a828-5fa7b1edca70",
            "sourceColumn": "avatarUrls.24x24",
            "summarizeBy": "none"
          },
          {
            "name": "avatarUrls.16x16",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "ImageUrl",
            "dataType": "string",
            "lineageTag": "f8d2c17d-0e59-4290-a411-e6534876a5cb",
            "sourceColumn": "avatarUrls.16x16",
            "summarizeBy": "none"
          },
          {
            "name": "avatarUrls.32x32",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "ImageUrl",
            "dataType": "string",
            "lineageTag": "a8dc409a-b158-4269-ab85-8d3b9dea6247",
            "sourceColumn": "avatarUrls.32x32",
            "summarizeBy": "none"
          },
          {
            "name": "projectCategory.self",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "WebUrl",
            "dataType": "string",
            "lineageTag": "2f782610-b656-4269-9929-479664410c3d",
            "sourceColumn": "projectCategory.self",
            "summarizeBy": "none"
          },
          {
            "name": "projectCategory.id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6a6f4ee1-a7dc-4f03-b1ac-d57bac9589c9",
            "sourceColumn": "projectCategory.id",
            "summarizeBy": "none"
          },
          {
            "name": "projectCategory.description",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7fbb6841-2ea5-46ee-b6fa-22804cfe90c2",
            "sourceColumn": "projectCategory.description",
            "summarizeBy": "none"
          },
          {
            "name": "projectCategory.name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0fd65fcf-6b85-463d-9bcd-fa75e57c635e",
            "sourceColumn": "projectCategory.name",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "eda4aec9-5929-40c5-9a98-e5c3cff37b6b",
        "partitions": [
          {
            "name": "Projects",
            "mode": "import",
            "queryGroup": "03 Supporting Tables\\03.1 Staging\\03.2 Lookup tables",
            "source": {
              "expression": [
                "let",
                "    Source = #\"JIRA Lookup tables\",",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"project\"}),",
                "    #\"Expanded project\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"project\", {\"self\", \"id\", \"key\", \"name\", \"projectTypeKey\", \"simplified\", \"avatarUrls\", \"projectCategory\"}, {\"self\", \"id\", \"key\", \"project\", \"projectTypeKey\", \"simplified\", \"avatarUrls\", \"projectCategory\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Expanded project\"),",
                "    #\"Expanded avatarUrls\" = Table.ExpandRecordColumn(#\"Removed Duplicates\", \"avatarUrls\", {\"48x48\", \"24x24\", \"16x16\", \"32x32\"}, {\"avatarUrls.48x48\", \"avatarUrls.24x24\", \"avatarUrls.16x16\", \"avatarUrls.32x32\"}),",
                "    #\"Expanded projectCategory\" = Table.ExpandRecordColumn(#\"Expanded avatarUrls\", \"projectCategory\", {\"self\", \"id\", \"description\", \"name\"}, {\"projectCategory.self\", \"projectCategory.id\", \"projectCategory.description\", \"projectCategory.name\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded projectCategory\",{{\"project\", \"Project\"}}),",
                "    // Filtered out Service Mangement board, because all the other boards contain subtickets cloned off SM tickets. Also, completing items in sub-boards doesn't feedback to SM, so they stay open",
                "    // ",
                "    // Filtered out a board, as it's not relevant to this org group",
                "    #\"Filtered out non-group boards\" = Table.SelectRows(#\"Renamed Columns\", each ([Project] <> \"Operations-Reporting\" and [Project] <> \"Service Management\"))",
                "in",
                "    #\"Filtered out non-group boards\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Issue Types",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "self",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f1ad0b14-a386-4647-ba28-9dc93e0df967",
            "sourceColumn": "self",
            "summarizeBy": "none"
          },
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "94bfee61-ae1b-4526-ad97-30b1ef306d6c",
            "sourceColumn": "id",
            "summarizeBy": "none"
          },
          {
            "name": "iconUrl",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5288ee03-3b9c-46d5-b77e-8e215c123fc6",
            "sourceColumn": "iconUrl",
            "summarizeBy": "none"
          },
          {
            "name": "Issue Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c77fe2f1-3fb9-4e60-9a39-c95ec89d8a64",
            "sourceColumn": "Issue Type",
            "summarizeBy": "none"
          },
          {
            "name": "is subtask",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "b2f965a7-86d0-4095-8914-67cdbaa41211",
            "sourceColumn": "is subtask",
            "summarizeBy": "none"
          },
          {
            "name": "avatarId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ea624b11-5990-4242-a159-cca7b1cce45d",
            "sourceColumn": "avatarId",
            "summarizeBy": "none"
          },
          {
            "name": "hierarchyLevel",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "ab2792c6-89ac-49e4-ab20-ef0cfadedb58",
            "sourceColumn": "hierarchyLevel",
            "summarizeBy": "none"
          },
          {
            "name": "Issue type description",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f2890d10-57db-4e1b-99e4-1d54647e41bd",
            "sourceColumn": "Issue type description",
            "summarizeBy": "none"
          },
          {
            "name": "Issue type family",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3bd42cd7-966f-4e9a-93b9-50c995ca2c75",
            "sourceColumn": "Issue type family",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "c92ff046-27c6-44c0-ac99-56ce866f6282",
        "partitions": [
          {
            "name": "Issue Types",
            "mode": "import",
            "queryGroup": "03 Supporting Tables\\03.1 Staging\\03.2 Lookup tables",
            "source": {
              "expression": [
                "let",
                "    Source = #\"JIRA Lookup tables\",",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"issuetype\"}),",
                "    #\"Expanded issuetype\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"issuetype\", {\"self\", \"id\", \"description\", \"iconUrl\", \"name\", \"subtask\", \"avatarId\", \"hierarchyLevel\"}, {\"self\", \"id\", \"description\", \"iconUrl\", \"name\", \"is subtask\", \"avatarId\", \"hierarchyLevel\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded issuetype\",{{\"is subtask\", type logical}, {\"hierarchyLevel\", Int64.Type}}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Changed Type\", {\"name\"}),",
                "    #\"Merged Queries\" = Table.NestedJoin(#\"Removed Duplicates\", {\"name\"}, #\"Issue Families\", {\"Issue type\"}, \"Issue Families\", JoinKind.LeftOuter),",
                "    #\"Expanded Issue Families\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Issue Families\", {\"Issue type description\", \"Issue type family\"}, {\"Issue type description\", \"Issue type family\"}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded Issue Families\",{\"description\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"name\", \"Issue Type\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      }
    ]
  }
}